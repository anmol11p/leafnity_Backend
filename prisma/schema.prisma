generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  email             String   @unique
  password          String
  resetToken        String?  
  resetTokenExpires DateTime? 
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  carts             Cart[]
  orders            CustomerOrder[]
  addresses         Address[]
}

model Plant {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  plant_name    String
  total_price   Float
  selling_price Float
  percent_off   String
  rating        Int
  description   String
  image_src     String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  carts         Cart[]
  orderItems    OrderItem[]
}

model Cart {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  plantId    String   @db.ObjectId
  quantity   Int
  totalPrice Float    @default(0.00)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user   User  @relation(fields: [userId], references: [id])
  plant  Plant @relation(fields: [plantId], references: [id])

  @@unique([userId, plantId])
}

model Address {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  fullName   String
  phone      String
  street     String
  city       String
  state      String
  postalCode String
  country    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  orders     CustomerOrder[]
}

model CustomerOrder {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userId          String   @db.ObjectId
  addressId       String?  @db.ObjectId
  totalAmount     Float
  razorpayOrderId String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user            User     @relation(fields: [userId], references: [id])
  address         Address? @relation(fields: [addressId], references: [id])
  items           OrderItem[]
}

model OrderItem {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  orderId     String   @db.ObjectId
  plantId     String   @db.ObjectId
  quantity    Int
  totalAmount Float
  status      String   @default("Ordered")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  order       CustomerOrder @relation(fields: [orderId], references: [id])
  plant       Plant         @relation(fields: [plantId], references: [id])

  @@unique([orderId, plantId])
}
